; Display output on the 7-segment display
; The 7-Segment Display is attached to Port 02 of Samphire
;
; A table of data, holding the hex values needed to display the symbols 0..9
; is stored in memory starting at address 80
;
; A byte is placed into the memory using the DB assembler directive
; The 7-seg display will continuously display the symbols 0..9 in the order specified in the data table
;
; The al register is used hold the values being output to Port 02
; The bl register is used to hold the address being accessed in the data table.

; start of code clear both the right hand side and left hand side of the 7-seg display
   mov al, 00
   out 02
   mov al, 01
   out 02
; end of code to clear both the right hand side and left hand side of the 7-seg display

start:
 mov bl, 80    ; Put the start address of the table into the bl register: 80 is the start address of the translation table.
 begin:
  mov al, [bl] ; move the value in memory, at the address corresponding to the value in the bl register, into the al register
  out 02       ; output the value in the al register to the 7-seg display.
  inc bl       ; increment the bl register to point to the next address in the table
  cmp bl, 8A   ; Check if the bl register points beyond the end of the table: 8A is the address after the end of the table of data. 
  jz start   
jmp begin


; start the data table from address 80
org 80
DB fb ; Hex value needed to display 0 in 7-seg display
DB 0b ; Hex value needed to display 1 in 7-seg display
DB b7 ; Hex value needed to display 2 in 7-seg display
DB 9f ; Hex value needed to display 3 in 7-seg display
DB 4f ; Hex value needed to display 4 in 7-seg display
DB dd ; Hex value needed to display 5 in 7-seg display
DB 7d ; Hex value needed to display 6 in 7-seg display
DB 8b ; Hex value needed to display 7 in 7-seg display
DB ff ; Hex value needed to display 8 in 7-seg display
DB cf ; Hex value needed to display 9 in 7-seg display
end